plugins {
    id 'java'
    id 'io.spring.dependency-management' version "1.0.10.RELEASE"
    id 'org.springframework.boot' version '2.4.1'
    id 'pl.allegro.tech.build.axion-release' version '1.12.1'
    id 'com.palantir.docker' version '0.25.0'
    id 'com.palantir.docker-run' version '0.25.0'
}

group 'org.example'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-devtools'
    implementation group: 'com.h2database', name: 'h2', version: '1.4.200'
    compileOnly 'org.projectlombok:lombok:1.18.12'
    annotationProcessor 'org.projectlombok:lombok:1.18.12'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.7.0'
    testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.7.0'
    testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-params', version: '5.7.0'
    testCompile group: 'org.junit.jupiter', name: 'junit-jupiter', version: '5.7.0'
//    testCompile group: 'junit', name: 'junit', version: '4.12'
}

test {
    useJUnitPlatform()
}

project.version = scmVersion.version

// Prepare to Run in Docker
String imageName = "chengavin/springboot_api_example:$version"

docker {
    name imageName
    files "build/libs/${bootJar.archiveFileName.get()}"
    buildArgs([JAR_FILE: bootJar.archiveFileName.get()])
}

dockerRun {
    name project.name
    image imageName
    ports '9000:8080'
    clean true
}